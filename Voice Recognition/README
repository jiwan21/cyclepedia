Code inspired by: https://cloud.google.com/speech-to-text/docs/streaming-recognize 

We used Google Cloud Speech-to-Text API for streaming audio transcription for the game. After being transcribed, the phrases are sent to Unity over UDP. Unity then compare them with target phrases. If there's a match, it allows the player to avoid obstacles and switch between scenes (main menu, tutorial, and game).

The Python code has been working pretty well. In order to compensate for the transcription inaccuracy due to different players' unique voice features, we found the most frequently confused phrases and accounted for them in the game. For example, instead of only accepting "on your right", it also accepts "all your right" and "oh your right". These phrases can be found by having the player playing the game multiple times and looking for phrases similar to target phrases.
 
 
