Code inspired by: https://cloud.google.com/speech-to-text/docs/streaming-recognize 

We used Google Cloud Speech-to-Text API for streaming audio transcription for the game. After being transcribed, the phrases are sent to Unity over UDP. Unity then compare them with target phrases. If there's a match, it allows the player to change lanes and avoid obstacles. 

The Python code has been working pretty well. For future improvement, in order to compensate for the transcription inaccuracy due to different players' unique voice features, we can find the most frequently confused phrases and make them acceptable results. For example, instead of only accepting "on your right", it could also accept "all your right" and "oh your right". These phrases can be found by having the player playing the game multiple times and looking for phrases similar to target phrases.
